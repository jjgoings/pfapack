name: Build and Publish to PyPI

on:
  push:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-11, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        include:
          - os: macos-latest
            arch: arm64
          - os: macos-11
            arch: x86_64
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel numpy scipy cython

      - name: Install GCC and GFortran (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc gfortran

      - name: Install GCC and GFortran (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install gcc

      - name: Build wheel
        env:
          CFLAGS: "-march=native"
          CXXFLAGS: "-march=native"
        run: |
          python setup.py bdist_wheel

      - name: Run tests
        run: |
          pip install pytest
          pip install dist/*.whl
          pytest tests

      - uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.python-version }}
          path: dist/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel numpy scipy cython
      - name: Build sdist
        run: python setup.py sdist
      - uses: actions/upload-artifact@v3
        with:
          name: sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist
      - name: Display structure of downloaded files
        run: ls -R
        working-directory: dist
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
